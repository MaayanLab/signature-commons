# Source: docker-compose/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: signature-commons
  labels:
    app: signature-commons
spec:   
  selector:
    matchLabels:
      app: signature-commons
  template:
    metadata:
      labels:
        app: signature-commons
    spec:
      containers:
      - name: data-api
        image: maayanlab/enrichmentapi:latest
        imagePullPolicy: Always
        env:
        - name: AWS_ACCESS_KEY_ID
          value: "{{ .Values.DATA_DB_ACCESS_KEY }}"
        - name: AWS_BUCKET
          value: "{{ .Values.DATA_DB_BUCKET }}"
        - name: AWS_ENDPOINT_URL
          value: "{{ .Values.DATA_DB_ENDPOINT }}"
        - name: AWS_SECRET_ACCESS_KEY
          value: "{{ .Values.DATA_DB_SECRET_KEY }}"
        - name: PREFIX
          value: "{{ .Values.DATA_API_PREFIX }}"
        - name: TOKEN
          value: "{{ .Values.DATA_API_TOKEN }}"
        - name: deployment
          value: "marathon_deployed"
        ports:
          - containerPort: 8080
      
      
      

      - name: data-db
        image: minio/minio
        imagePullPolicy: Always
        command:
        - /bin/sh
        args:
        - -c
        - mkdir -p /data/$MINIO_BUCKET; minio server /data; exit 0

        env:
        - name: MINIO_ACCESS_KEY
          value: "{{ .Values.DATA_DB_ACCESS_KEY }}"
        - name: MINIO_BUCKET
          value: "{{ .Values.DATA_DB_BUCKET }}"
        - name: MINIO_SECRET_KEY
          value: "{{ .Values.DATA_DB_SECRET_KEY }}"
        ports:
          - containerPort: 9000

      - name: metadata-api
        image: maayanlab/signature-commons-metadata-api:latest
        imagePullPolicy: Always
        env:
        - name: ADMIN_PASSWORD
          value: "{{ .Values.META_API_PASSWORD }}"
        - name: ADMIN_USERNAME
          value: "{{ .Values.META_API_USERNAME }}"
        - name: DEBUG
          value: "{{ .Values.META_API_DEBUG }}"
        - name: NODE_OPTIONS
          value: "--max_old_space_size=4096"
        - name: PREFIX
          value: "{{ .Values.META_API_PREFIX }}"
        - name: TYPEORM_LOGGING
          value: "true"
        - name: TYPEORM_MIGRATIONS_RUN
          value: "false"
        - name: TYPEORM_SYNCHRONIZE
          value: "true"
        - name: TYPEORM_URL
          value: "postgres://{{ .Values.META_DB_USERNAME }}:{{ .Values.META_DB_PASSWORD }}@{{ .Values.META_DB_HOST }}:{{ .Values.META_DB_PORT }}/{{ .Values.META_DB_DATABASE }}"
        ports:
          - containerPort: 3000
      
      
      

      - name: metadata-db
        image: postgres:11
        imagePullPolicy: Always
        env:
        - name: POSTGRES_DATABASE
          value: "{{ .Values.META_DB_DATABASE }}"
        - name: POSTGRES_PASSWORD
          value: "{{ .Values.META_DB_PASSWORD }}"
        - name: POSTGRES_USER
          value: "{{ .Values.META_DB_USERNAME }}"
        ports:
          - containerPort: 5432

      - name: ui
        image: maayanlab/sigcom:latest
        imagePullPolicy: Always
        env:
        - name: NEXT_PUBLIC_DATA_API
          value: "{{ .Values.DATA_API_PREFIX }}"
        - name: NEXT_PUBLIC_METADATA_API
          value: "{{ .Values.META_API_PREFIX }}"
        - name: PREFIX
          value: "{{ .Values.UI_PREFIX }}"
        ports:
          - containerPort: 80
