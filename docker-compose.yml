version: "3"

services:
  # Front-end to entire framework proxy API connections
  #  and potentially handle load balancing in the future.
  proxy:
    build:
      context: packages/proxy
    image: maayanlab/proxy:1.1.2
    labels:
      kompose.image-pull-policy: "Always"
      kompose.service.expose: "true"
    restart: "on-failure"
    networks:
      default:
      internal:
        aliases:
          - proxy
    environment:
      nginx_server_name: "${SERVER_NAME}"
      nginx_proxy_00: "${UI_PREFIX}/?(.*) http://ui:80/sigcom/$$1"
      nginx_proxy_03: "${META_API_PREFIX}/?(.*) http://metadata-api:3000/$$1"
      nginx_proxy_04: "${DATA_API_PREFIX}/?(.*) http://data-api:8080/enrichmentapi/$$1"
    ports:
      - 80:80
      # - 443:443

  # UI rendering, facilitates integration of metadata and data apis
  ui:
    build:
      context: packages/ui
    image: maayanlab/sigcom:generic
    labels:
      kompose.image-pull-policy: "Always"
    restart: "on-failure"
    networks:
      internal:
        aliases:
          - ui

  # Metadata API, facilitates json-validatable
  #  database interactions with metadata postgresql DB
  metadata-api:
    build:
      context: packages/metadata-api
    image: maayanlab/signature-commons-metadata-api
    labels:
      kompose.image-pull-policy: "Always"
    restart: "on-failure"
    networks:
      internal:
        aliases:
          - metadata-api
    environment:
      ADMIN_PASSWORD: "${META_API_PASSWORD}"
      ADMIN_USERNAME: "${META_API_USERNAME}"
      DEBUG: "${META_API_DEBUG}"
      NODE_OPTIONS: "--max_old_space_size=4096"
      PREFIX: ""
      TYPEORM_MIGRATIONS_RUN: "true"
      TYPEORM_SYNCHRONIZE: "true"
      TYPEORM_LOGGING: "true"
      TYPEORM_URL: "postgresql://${META_DB_USERNAME}:${META_DB_PASSWORD}@${META_DB_HOST}:${META_DB_PORT}/${META_DB_DATABASE}"

  # Data API, facilitates efficient data-level analysis
  data-api:
    build:
      context: packages/data-api
    image: maayanlab/enrichmentapi
    labels:
      kompose.image-pull-policy: "Always"
    restart: "on-failure"
    networks:
      internal:
        aliases:
          - data-api
    environment:
      TOKEN: "${DATA_API_TOKEN}"
      deployment: marathon_deployed
      AWS_ACCESS_KEY_ID: "${DATA_DB_ACCESS_KEY}"
      AWS_SECRET_ACCESS_KEY: "${DATA_DB_SECRET_KEY}"
      AWS_BUCKET: "${DATA_DB_BUCKET}"
      AWS_ENDPOINT_URL: "${DATA_DB_ENDPOINT}"

# Internal docker networks
networks:
  internal:

# Internal docker networks
networks:
  internal:
