version: "3"

services:
  # UI rendering, facilitates integration of metadata and data apis
  ui:
    build:
      context: packages/ui
    image: maayanlab/sigcom:latest
    labels:
      helm.docker-compose.toggle-active: "UI"
      helm.docker-compose.image-pull-policy: "Always"
      helm.docker-compose.ingress.prefix: "${UI_PREFIX}"
      helm.docker-compose.ingress.port: "80"
    restart: "on-failure"
    networks:
      internal:
        aliases:
          - ui
    environment:
      PREFIX: "${UI_PREFIX}"
      NEXT_PUBLIC_METADATA_API: "${META_API_PREFIX}"
      NEXT_PUBLIC_DATA_API: "${DATA_API_PREFIX}"
      NEXT_PUBLIC_ENRICHR_URL: "${ENRICHR_API_PREFIX}"
    ports:
      - "80"

  # Metadata API, facilitates json-validatable
  #  database interactions with metadata postgresql DB
  metadata-api:
    build:
      context: packages/metadata-api
    image: maayanlab/signature-commons-metadata-api
    labels:
      helm.docker-compose.toggle-active: "META_API"
      helm.docker-compose.image-pull-policy: "Always"
      helm.docker-compose.ingress.prefix: "${META_API_PREFIX}"
      helm.docker-compose.ingress.port: "3000"
    restart: "on-failure"
    networks:
      internal:
        aliases:
          - metadata-api
    environment:
      ADMIN_PASSWORD: "${META_API_PASSWORD}"
      ADMIN_USERNAME: "${META_API_USERNAME}"
      DEBUG: "${META_API_DEBUG}"
      NODE_OPTIONS: "--max_old_space_size=4096"
      PREFIX: "${META_API_PREFIX}"
      OPENAPI_TITLE: "${META_API_TITLE}"
      REFRESH_ON_STARTUP: "true"
      TYPEORM_MIGRATIONS_RUN: "true"
      TYPEORM_SYNCHRONIZE: "true"
      TYPEORM_LOGGING: "true"
      TYPEORM_URL: "postgres://${META_DB_USERNAME}:${META_DB_PASSWORD}@${META_DB_HOST}:${META_DB_PORT}/${META_DB_DATABASE}"
    ports:
      - "3000"

  # Data API, facilitates efficient data-level analysis
  data-api:
    build:
      context: packages/data-api
    image: maayanlab/enrichmentapi:latest
    labels:
      helm.docker-compose.toggle-active: "DATA_API"
      helm.docker-compose.image-pull-policy: "Always"
      helm.docker-compose.ingress.prefix: "${DATA_API_PREFIX}"
      helm.docker-compose.ingress.port: "8080"
    restart: "on-failure"
    networks:
      internal:
        aliases:
          - data-api
    environment:
      PREFIX: "${DATA_API_PREFIX}"
      TOKEN: "${DATA_API_TOKEN}"
      deployment: marathon_deployed
      AWS_ACCESS_KEY_ID: "${DATA_DB_ACCESS_KEY}"
      AWS_SECRET_ACCESS_KEY: "${DATA_DB_SECRET_KEY}"
      AWS_BUCKET: "${DATA_DB_BUCKET}"
      AWS_ENDPOINT_URL: "${DATA_DB_ENDPOINT}"
      S3_AUTOLOAD: "true"
    ports:
      - "8080"

# Internal docker networks
networks:
  internal:
